1.#include<stdio.h>
struct employee
{
     int e;
     char name[20];
     char designation[20];
     char dept[20];
     int sal;
};
int main()
{
     struct employee a;
     printf("Enter Employee Details:\n");
     printf("-------------------------------\n");
     printf("Enter Employee-Id : ");
     scanf("%d",&a.e);
     printf("Enter Name        : ");
     scanf("%s",a.name);
     printf("Enter Designation : ");
     scanf("%s",a.designation);
     printf("Enter Department  : ");
     scanf("%s",a.dept);
     printf("Enter Salary      : ");
     scanf("%d",&a.sal);
     printf("-------------------------------");
     printf("\nEmployee Details: \n---------------------------------\n");
     printf("Employee-Id : %d\n",a.e);
     printf("Name        : %s\n",a.name);
     printf("Designation : %s\n",a.designation);
     printf("Department  : %s\n",a.dept);
     printf("Salary      : %d\n",a.sal);
     return 0;
}
2.#include<stdio.h>
struct player
{
     char name[20];
     int runs;
};
int main()
{
     int i,s=0;
     struct player a[11]; //a[11] - no. of players
     printf("Enter Name of Player Runs Scored \n");
     printf("---------------------------------------------\n\t");
     for(i=0;i<=10;i++)
     {
          scanf("%s",a[i].name);
          scanf("%d",&a[i].runs);
          printf("\t");
     }
     for(i=0;i<=10;i++)
          s=s+a[i].runs;
     printf("\n---------------------------------------------\n");
     printf("Total Runs Scored by Team: %d",s);
     return 0;
}
3.#include <stdio.h>
int main()
{
    int num1, num2, lcm, max;

    printf("Enter two positive integers: ");
    scanf("%d %d", &num1, &num2);

    // determine the maximum between num1 and num2
    max = (num1 > num2) ? num1 : num2;

    while (1)
    {
        if (max % num1 == 0 && max % num2 == 0)
        {
            lcm = max;
            break;
        }
        ++max;
    }

    printf("LCM of %d and %d = %d", num1, num2, lcm);

    return 0;
}
4.#include <stdio.h>

// Function to calculate GCD using recursion
int gcd(int num1, int num2) {
    if (num2 != 0) {
        return gcd(num2, num1 % num2);
    }
    else {
        return num1;
    }
}

int main() {
    int num1, num2;
    printf("Enter two numbers to find their GCD: ");
    scanf("%d %d", &num1, &num2);
    int result = gcd(num1, num2);
    printf("GCD of %d and %d is %d", num1, num2, result);
    return 0;
}
5.#include <stdio.h>
#include <string.h>
#define MAX_SIZE 100
int main()
{
    char str[MAX_SIZE];
    int freq[256] = {0}, maxFreq = 0;
    char maxChar;

    printf("Enter a string: ");
    fgets(str, MAX_SIZE, stdin);

    for(int i = 0; i < strlen(str); i++)
    {
        freq[str[i]]++; //increment frequency of character
    }

    // find the character with maximum frequency
    for(int i = 0; i < 256; i++)
    {
        if(freq[i] > maxFreq)
        {
            maxFreq = freq[i];
            maxChar = i;
        }
    }

    printf("The character '%c' has the highest frequency of %d", maxChar, maxFreq);

    return 0;
}
6.#include <stdio.h>
#include <string.h>
int main()
{
    char str1[100], str2[100];
    int len1, len2, i, j, found = 0, not_found = 0;

    printf("Enter the first string: ");
    gets(str1);
    printf("Enter the second string: ");
    gets(str2);

    len1 = strlen(str1);
    len2 = strlen(str2);

    if(len1 == len2)
    {
        for(i=0; i<len1; i++)
        {
            found = 0;
            for(j=0; j<len2; j++)
            {
                if(str1[i] == str2[j])
                {
                    found = 1;
                    break;
                }
            }
            if(found == 0)
            {
                not_found = 1;
                break;
            }
        }
        if(not_found == 1)
        {
            printf("\nStrings are not anagrams!");
        }
        else
        {
            printf("\nStrings are anagrams!");
        }
    }
    else
    {
        printf("\nLength of both strings must be equal to be anagrams!");
    }

    return 0;
}
7.#include <stdio.h>
int main() {
   char str[100];
   int i, sum = 0;

   printf("Enter a string: ");
   gets(str);

   for (i = 0; str[i] != '\0'; i++) {
      sum += (int) str[i];   // add the ASCII value of each character to sum
   }

   printf("The sum of ASCII values of all characters in the string is: %d", sum);

   return 0;
}
8.#include <stdio.h>
#include <string.h>
void swap(char *a, char *b) {
    char temp = *a;
    *a = *b;
    *b = temp;
}
void permute(char *str, int start, int end) {
    if (start == end) {
        printf("%s\n", str);
        return;
    }
 for (int i = start; i <= end; i++) {
        swap((str+start), (str+i));
        permute(str, start+1, end);
        swap((str+start), (str+i));
    }
}

int main() {
    char str[100];
    printf("Enter a string: ");
    scanf("%s", str);

    int n = strlen(str);
    printf("Permutations of the string are:\n");
    permute(str, 0, n-1);

    return 0;
}
9.#include <stdio.h>
void copy_array(int *source_array, int *dest_array, int size);
int main() {
    int source[] = {1, 2, 3, 4, 5};
    int dest[5];
    int size = sizeof(source) / sizeof(source[0]);

    copy_array(source, dest, size);

    printf("Source array: ");
    for (int i = 0; i < size; i++) {
        printf("%d ", source[i]);
    }

    printf("\nDest array: ");
    for (int i = 0; i < size; i++) {
        printf("%d ", dest[i]);
    }

    return 0;
}

void copy_array(int *source_array, int *dest_array, int size) {
    for (int i = 0; i < size; i++) {
        *(dest_array + i) = *(source_array + i);
    }
}
10.#include <stdio.h> 
int main() {
   int radius;
   float area, perimeter;    
   radius = 6;

   perimeter = 2*3.14*radius;
   printf("Perimeter of the Circle = %f inches\n", perimeter);

	area = 3.14*radius*radius;
	printf("Area of the Circle = %f square inches\n", area);

return(0);
}
