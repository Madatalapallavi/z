1.#include <stdio.h>
int isPrime(int num);
int main()
{
    int start, end, i, flag;

    printf("Enter two numbers(intervals): ");
    scanf("%d %d", &start, &end);

    printf("Prime numbers between %d and %d are: ", start, end);

    for(i=start+1; i<end; ++i)
    {
        // If i is a prime number, print it
        flag = isPrime(i);

        if(flag == 1)
            printf("%d ",i);
    }

    return 0;
}

// Function to check prime number
int isPrime(int num)
{
    int i;

    for(i=2; i<=num/2; ++i)
    {
        if(num%i == 0)
        {
            return 0;
        }
    }

    return 1;
}
2.#include <stdio.h>
int isPrime(int num);
int main() {
    int n, i, flag = 0;
    printf("Enter a positive integer: ");
    scanf("%d", &n);
    for (i = 2; i <= n / 2; ++i) {
        if (isPrime(i) == 1) {
            if (isPrime(n - i) == 1) {
                printf("%d = %d + %d\n", n, i, n - i);
                flag = 1;
            }
        }
    }
    if (flag == 0)
        printf("%d cannot be expressed as the sum of two prime numbers.\n", n);
    return 0;
}

int isPrime(int num) {
    int i;
    for (i = 2; i <= num / 2; ++i) {
        if (num % i == 0) {
            return 0;
        }
    }
    return 1;
}
3.#include <stdio.h>
int main()
{
    int num1, num2, lcm, max;
    
    printf("Enter two positive integers: ");
    scanf("%d %d", &num1, &num2);
    
    // determine the maximum between num1 and num2
    max = (num1 > num2) ? num1 : num2;
    
    while (1)
    {
        if (max % num1 == 0 && max % num2 == 0)
        {
            lcm = max;
            break;
        }
        ++max;
    }
    
    printf("LCM of %d and %d = %d", num1, num2, lcm);
    
    return 0;
}
4.#include <stdio.h>

// Function to calculate GCD using recursion
int gcd(int num1, int num2) {
    if (num2 != 0) {
        return gcd(num2, num1 % num2);
    }
    else {
        return num1;
    }
}

int main() {
    int num1, num2;
    printf("Enter two numbers to find their GCD: ");
    scanf("%d %d", &num1, &num2);
    int result = gcd(num1, num2);
    printf("GCD of %d and %d is %d", num1, num2, result);
    return 0;
}
5.#include <stdio.h>
#include <string.h>
#define MAX_SIZE 100
int main()
{
    char str[MAX_SIZE];
    int freq[256] = {0}, maxFreq = 0;
    char maxChar;

    printf("Enter a string: ");
    fgets(str, MAX_SIZE, stdin);

    for(int i = 0; i < strlen(str); i++)
    {
        freq[str[i]]++; //increment frequency of character
    }

    // find the character with maximum frequency
    for(int i = 0; i < 256; i++)
    {
        if(freq[i] > maxFreq)
        {
            maxFreq = freq[i];
            maxChar = i;
        }
    }

    printf("The character '%c' has the highest frequency of %d", maxChar, maxFreq);

    return 0;
}
6.#include <stdio.h>
int main() {
   char str[100];
   int i, sum = 0;

   printf("Enter a string: ");
   gets(str);

   for (i = 0; str[i] != '\0'; i++) {
      sum += (int) str[i];   // add the ASCII value of each character to sum
   }

   printf("The sum of ASCII values of all characters in the string is: %d", sum);

   return 0;
}
7.#include <stdio.h>
int main() {
   char str[100];
   int i, sum = 0;

   printf("Enter a string: ");
   gets(str);

   for (i = 0; str[i] != '\0'; i++) {
      sum += (int) str[i];   // add the ASCII value of each character to sum
   }

   printf("The sum of ASCII values of all characters in the string is: %d", sum);

   return 0;
}
8.#include <stdio.h>
void copy_array(int *source_array, int *dest_array, int size);
int main() {
    int source[] = {1, 2, 3, 4, 5};
    int dest[5];
    int size = sizeof(source) / sizeof(source[0]);

    copy_array(source, dest, size);

    printf("Source array: ");
    for (int i = 0; i < size; i++) {
        printf("%d ", source[i]);
    }

    printf("\nDest array: ");
    for (int i = 0; i < size; i++) {
        printf("%d ", dest[i]);
    }

    return 0;
}

void copy_array(int *source_array, int *dest_array, int size) {
    for (int i = 0; i < size; i++) {
        *(dest_array + i) = *(source_array + i);
    }
}
9.#include <stdio.h>
void copy_array(int *source_array, int *dest_array, int size);
int main() {
    int source[] = {1, 2, 3, 4, 5};
    int dest[5];
    int size = sizeof(source) / sizeof(source[0]);

    copy_array(source, dest, size);

    printf("Source array: ");
    for (int i = 0; i < size; i++) {
        printf("%d ", source[i]);
    }

    printf("\nDest array: ");
    for (int i = 0; i < size; i++) {
        printf("%d ", dest[i]);
    }

    return 0;
}

void copy_array(int *source_array, int *dest_array, int size) {
    for (int i = 0; i < size; i++) {
        *(dest_array + i) = *(source_array + i);
    }
}
10.#include <stdio.h>
#include <string.h>
void reverse(char *str);
int main() {
    char str[100];

    printf("Enter a string: ");
    scanf("%s", str);

    printf("Original string: %s\n", str);

    reverse(str);

    printf("Reversed string: %s\n", str);

    return 0;
}

void reverse(char *str) {
    int len = strlen(str);
    char *start = str;
    char *end = str + len - 1;

    while (start < end) {
        char temp = *start;
        *start = *end;
        *end = temp;

        start++;
        end--;
    }
}
